version: '3'
services:
  db:
    image: mysql
    container_name: database
    restart: no
    environment:
      MYSQL_ROOT_PASSWORD: root
    healthcheck:
        test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1", "--silent"]
        interval: 3s
        retries: 5
        start_period: 30s
    volumes:
      - mysql_volume:/var/lib/mysql
    networks:
      - dept-desig-micro-network
    expose:
        - 3306
        - 33060
  eureka:
    build:
      context: ./backend_java/m_eureka_server/
    container_name: eureka-server-container
    restart: no    
    environment:
      - "spring.profiles.active=default"
    networks:
      - dept-desig-micro-network
    depends_on:
      db:
        condition: service_healthy
    ports:
      - 8761:8761
  gateway:
    build:
      context: ./backend_java/m_gateway/
    container_name: gateway-container
    restart: no    
    environment:
      - "spring.profiles.active=docker"
    healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:8080"]
        interval: 3s
        retries: 5
        start_period: 30s
    networks:
      - dept-desig-micro-network
    depends_on:
      db:
        condition: service_healthy
    ports:
      - 8080:8080
  department-service:
    build:
      context: ./backend_java/m_department_service/
    container_name: department-service-container
    restart: no    
    environment:
      - "spring.profiles.active=docker"
    networks:
      - dept-desig-micro-network
    depends_on:
      db:
        condition: service_healthy
    # ports:
    #   - 8081:8081     
  designation-service:
    build:
      context: ./backend_java/m_designation_service/
    container_name: designation-service-container
    restart: no    
    environment:
      - "spring.profiles.active=docker"
    networks:
      - dept-desig-micro-network
    depends_on:
      db:
        condition: service_healthy
    # ports:
    #   - 8082:8082
  webapp:
    build:
      context: ./frontend-angular
    container_name: dept-desig-webapp
    restart: no    
    networks:
      - dept-desig-micro-network
    depends_on:
      gateway:
        condition: service_healthy
    ports:
      - 8000:80
  traefik:
    image: traefik:v2.5
    container_name: traefik
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--api.insecure=true"
    ports:
      - "80:80"
      - "443:443"
      - "8181:8080"
    networks:
      - dept-desig-micro-network
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik.yml:/traefik.yml
    labels:
      - "traefik.http.routers.traefik.rule=Host(`traefik.dev`)"
      - "traefik.http.routers.traefik.entrypoints=web"
networks:
  dept-desig-micro-network: {}
volumes:
  mysql_volume:
